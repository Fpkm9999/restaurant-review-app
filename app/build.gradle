plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)

    id "org.jetbrains.kotlin.kapt"

    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
    alias(libs.plugins.google.android.libraries.mapsplatform.secrets.gradle.plugin)

}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
android {
    namespace 'com.crazyfoodfighter.restaurantreview'
    compileSdk 34

    defaultConfig {
        applicationId "com.crazyfoodfighter.restaurantreview"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [mapsApiKey: localProperties['MAPS_API_KEY']]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        encoding = "UTF-8"
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.fragment:fragment-ktx:1.8.0"
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.play.services.maps
    implementation libs.androidx.databinding.runtime
    implementation libs.core
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest


    // 파이어 베이스 관련 의존성 추가
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics.ktx
    // https://firebase.google.com/docs/android/setup#available-libraries
    // 필요한 다른 Firebase 라이브러리 추가

    // 파이어베이스 Realtime Database
    // https://firebase.google.com/docs/android/setup?hl=ko&authuser=0#java
    implementation libs.firebase.database.ktx

    // 파이어베이스 Storage : 미디어 저장 및 불러내기 위해 사용
    implementation libs.firebase.storage.ktx

    // 이미지 불러온 것을 로드하기 위함 // 파이어베이스에서 imageUrl 을 사진형태로 출력할 때 사용
    implementation libs.picasso

    // Glide 관련
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // 머테리얼 서치바 사용을 위함
    implementation 'com.google.android.material:material:1.12.0'

    // 구글맵 관련
    implementation libs.play.services.location
    implementation libs.android.maps.utils

    implementation libs.flogger
    implementation libs.flogger.system.backend

    // 스와이프 리프레쉬 뷰

    implementation libs.androidx.swiperefreshlayout

    implementation libs.xlog


}